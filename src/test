<!-- <button type="button" class="btn btn-primary" [class.active]="isAcctive">Primary</button>

<button [style.backgroundColor]="isAcctive? 'yellow' : 'black' ">itshare</button>

<button (click)="methodName()">save</button>


<div (click)="divclick()">
  <button (click)="btnclick($event)">save db</button>
</div> -->
<!-- event filter and templete variablies -->
<!-- <input [(#firstname)] (keyup.enter)="onKeyUp(firstname.value)" type="text"> -->

<!-- two way binding > banana inbox -->
<input [(ngModel)]="firstname" (keyup.enter)="onKeyUp()" type="text">
<div>
  {{firstname}}
</div>


<!-- directive component -->
<!-- <my-first [isFav]='favStat' (change)="favChange()">
  <div class="heading">My Custom Header Here</div>
  <div class="body">Itshare course</div>
</my-first> -->
<!-- <span class="glyphicon" [class.glyphicon-heart]="isFav" [class.glyphicon-heart-empty]="!isFav"
(click)="onFavClick()">

</span> -->

<!-- pipes -->
<!-- <div>


  {{ employees.salary | currency:'usd':true}}

</div> -->

<!-- custom pipes -->
<!-- <div>
  {{ name | summary }}
</div> -->




<!-- structure directive > ngFor
<ul>
  <li *ngFor="let p of persons; let i=index"> {{i+1}} - {{p}}</li>
</ul>
-->
<!-- ngFor Group By for Nested Array of Objects
<ul *ngFor="let group of peopleByCountry">
  <li>{{ group.country }}</li>
  <ul>
    <li *ngFor="let people of group.names">{{people.name}}</li>
  </ul>
</ul>
-->
<!-- ngFor add and remove items and trackBy
<button (click)="onAdd()">ADD</button>
<ul>
  <li *ngFor="let course of courses ; trackBy: trackByCourse">
    {{course.courseName}}
    <button (click)="onRemove(course)">remove</button>
  </li>
</ul>
-->
<!-- ngIf  > for show is found courses or not?
<div *ngIf="courses.length > 0">
  <ul>
    <li *ngFor="let course of courses ; trackBy: trackByCourse">
      {{course.courseName}}
      <button (click)="onRemove(course)">remove</button>
    </li>
  </ul>
</div>

<div *ngIf="courses.length == 0">
  NO COURSES YET
</div>
-->
<!-- anther way to ngIf with ngTemplate
<div *ngIf="courses.length > 0 ; then coursesList else noCourses"></div>
<ng-template #coursesList>
  <ul>
    <li *ngFor="let course of courses ; trackBy: trackByCourse">
      {{course.courseName}}
      <button (click)="onRemove(course)">remove</button>
    </li>
  </ul>
</ng-template>

<ng-template #noCourses>
  No courses yet
</ng-template>
-->
<!-- ngIf vs Hidden Properity
<div [hidden]="courses.length === 0">
  <ul>
    <li *ngFor="let course of courses ; trackBy: trackByCourse">
      {{course.courseName}}
      <button (click)="onRemove(course)">remove</button>
    </li>
  </ul>
</div>

<div [hidden]="courses.length > 0">
  NO course
</div>
-->
<!-- ngSwitchCase
<ul class="nav nav-pills">
  <li [class.active]="defaultView === 'Courses'">
    <a (click)="setView ('Courses')" >Courses</a>
  </li>
  <li [class.active]="defaultView === 'Certifications'">
    <a (click)="setView ('Certifications')" >Certifications</a>
  </li>
</ul>

<div [ngSwitch]="defaultView">
  <div *ngSwitchCase="'Courses'">List of Courses</div>
  <div *ngSwitchCase="'Certifications'">List of Certifications</div>
</div>
-->
<!-- ngStyle
<button [ngStyle]="
{
  'backgroundColor' : whatColor? 'yellow' :'gray' ,
  'color' :  whatColor? 'red' :'black' ,
  'fontWeight' : whatColor? 'bold' :'normal'
}
">Style</button>
-->
<!-- Custom Directives -->
<!-- <input type="text" CustomDirectives [format]="'toUpperCase'"> -->

<!-- template driven validation and ngForm and ngSubmit-->
<!-- <form #f="ngForm" (ngSubmit)="Submit(f)">
  <div class="form-group">
    <label for="exampleInputEmail1">Email address</label>
    <input type="email" name="email" ngModel #email="ngModel" url
    (change)="logObj(email)"
    minlength="15"
    pattern="asmaa@gmail.com"
    class="form-control" id="exampleInputEmail1" placeholder="Email">
    <p *ngIf="email.errors?.url">error message</p> -->
<!-- <div *ngIf="email.touched && email.invalid" class="alert alert-warning">
      <div *ngIf="'email.errors.required'">please enter your email</div>
      <div *ngIf="'email.errors.minlength'">min length is 15</div>
      <div *ngIf="'email.errors.pattern'">Invalid pattern</div>
    </div> -->
<!-- </div>
  <div class="form-group">
    <label for="exampleInputPassword1">Password</label>
    <input type="password" class="form-control" id="exampleInputPassword1" placeholder="Password">
  </div> -->
<!-- <div class="form-group">
    <label for="exampleInputFile">File input</label>
    <input type="file" id="exampleInputFile">
    <p class="help-block">Example block-level help text here.</p>
  </div> -->
<!-- <div class="checkbox">
    <label>
      <input type="checkbox"> Check me out
    </label>
  </div> -->
<!-- <button type="submit" [disabled]="f.invalid" class="btn btn-default">Submit</button>
</form> -->



<!-- Reactive form validation and ng2 validation شىي Async Custom Validatiors-->
<!-- <form class="form-inline" [formGroup]="form" (ngSubmit)="logIn()">
  <div class="form-group">
    <div *ngIf="form.errors" class="alert alert-warning">
      user name or password incorrect
    </div>
    <label class="sr-only" for="exampleInputEmail3">Email address</label>
    <input type="email" class="form-control" formControlName="email"
    id="exampleInputEmail3">

    <div *ngIf="email?.touched && email?.invalid" class="alert alert-warning">
      <div *ngIf="email?.errors?.shouldbeuniqness">email already exist</div>
    </div>

  </div>

  <div class="form-group">
    <label class="sr-only" for="exampleInputPassword3">Password</label>
    <input type="text" class="form-control" formControlName="password"
    id="exampleInputPassword3">

    <div *ngIf="password?.touched && password?.invalid" class="alert alert-warning">
      <div *ngIf="password?.errors?.noSpaceAllowed">please enter your password</div>
    </div>

  </div>

  <div class="form-group">
    <input type="text" formControlName="age"/>
  <p *ngIf="age?.errors?.rangeLength">error message</p>
  </div>

  <button type="submit" class="btn btn-default" id="my-element">Sign in</button>
</form> -->

<!-- Get Read Objects from HTTP and HTTP Update Object -->
<!-- <ul class="list-group">
  <li *ngFor="let post of posts" class="list-group-item">
    <div>
      <button class="btn btn-primary" (click)="updatePost(post, title.value)">Update</button>
      ||
      <button type="button" class="btn btn-danger" (click)="deletePost(post)">Delet</button>
    </div>

    {{post.title}}
  </li>
</ul> -->

<!-- HTTP Create method to add new object-->
<!-- <input type="text" #title (keyup.enter)="createPost(title)"> -->


//file app.component.ts
//isAcctive = true;

  //nameVal: any ;

  // methodName(){
  //     alert('welcom to alert');
  // }
  // divclick(){
  //   console.log("div click");
  // }
  // btnclick($event: { stopPropagation: () => void; }){
  //   $event.stopPropagation();
  //   console.log("btn click");
  // }
